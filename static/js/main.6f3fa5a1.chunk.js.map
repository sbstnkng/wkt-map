{"version":3,"sources":["components/panel/item/item.module.css","components/header/header.module.css","components/map/map.module.css","components/panel/buttons/addButton.module.css","components/panel/panel.module.css","types/Item.ts","redux/actionTypes.ts","redux/reducer.ts","redux/exampleCoordinates.ts","redux/store.ts","components/header/index.ts","components/header/Header.tsx","components/map/providers.ts","components/map/MapItems.tsx","components/map/index.ts","components/map/Map.tsx","components/panel/buttons/index.ts","components/panel/buttons/AddButtton.tsx","components/panel/item/index.ts","components/panel/item/Item.tsx","utils/wktParser.ts","components/panel/edit/index.ts","components/panel/edit/EditModal.tsx","components/panel/index.ts","components/panel/Panel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","ItemType","ADD_ITEM","MODIFY_ITEM","DELETE_ITEM","TOGGLE_ITEM_VISIBILITY","initialState","items","id","uuidv4","label","type","POLYGON","isVisible","color","geoJson","coordinates","bbox","POINT","reducer","state","action","item","payload","map","element","filter","createStore","Header","href","window","location","className","styles","logoWrapper","logo","providers","OpenStreetMap","url","attribution","maxZoom","Stadia","Stamen","MapItems","useMap","useEffect","bounds","it","forEach","LatLng","LINESTRING","MULTIPOINT","coordinate","flat","getCoordinates","tmpBounds","latLngBounds","push","length","fitBounds","GeoJSON","data","Popup","Map","useSelector","MapContainer","center","zoom","minZoom","scrollWheelZoom","mapContainer","ScaleControl","position","LayersControl","BaseLayer","checked","name","TileLayer","AddButtton","onClick","Button","variant","size","addButton","Item","handleEdit","dispatch","useDispatch","useState","showControls","setShowControls","faIconClass","container","containerInvisible","onMouseEnter","onMouseLeave","icon","controlPanel","visible","invisible","edit","delete","Terraformer","require","wktToGeoJson","wkt","wktToGeoJSON","EditModal","show","handleClose","setLabel","undefined","setWkt","isValid","setValid","shapeInput","useRef","title","geojsonToWKT","geoJsonToWkt","current","focus","Modal","onHide","Form","onSubmit","e","preventDefault","newItem","closeButton","Title","Body","Group","as","Row","controlId","Label","column","sm","Col","Control","placeholder","value","onChange","event","target","ref","rows","isInvalid","onBlur","error","validateWktShape","Feedback","Footer","disabled","Panel","showModal","setShowModal","itemToEdit","setItemToEdit","handleItemEdit","App","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f3fa5a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"item_container__3Io0T\",\"label\":\"item_label__1dfoR\",\"containerInvisible\":\"item_containerInvisible__HY58i\",\"icon\":\"item_icon__3kTJs\",\"controlPanel\":\"item_controlPanel__7ZphT\",\"visible\":\"item_visible__3iQzY\",\"invisible\":\"item_invisible__3iaxT\",\"edit\":\"item_edit__Kavg2\",\"delete\":\"item_delete__3ps_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoWrapper\":\"header_logoWrapper__3gg7y\",\"logo\":\"header_logo__1X7aW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mapContainer\":\"map_mapContainer__2HxH1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addButton\":\"addButton_addButton__2mszS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"panel_container__Ys76e\"};","export type UUID = string;\n\nexport enum ItemType {\n  POINT = 'Point',\n  MULTIPOINT = 'MultiPoint',\n  LINESTRING = 'LineString',\n  POLYGON = 'Polygon',\n}\n\nexport interface MapItem {\n  id: UUID;\n  label: string;\n  type: ItemType;\n  isVisible: boolean;\n  color: string;\n  geoJson?: any;\n}\n","export const ADD_ITEM = 'ADD_ITEM';\nexport const MODIFY_ITEM = 'MODIFY_ITEM';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const TOGGLE_ITEM_VISIBILITY = 'TOGGLE_ITEM_VISIBILITY';\n","import { v4 as uuidv4 } from 'uuid';\nimport { ItemType } from '../types/Item';\nimport { State, Action } from '../types/Redux';\nimport {\n  ADD_ITEM,\n  MODIFY_ITEM,\n  DELETE_ITEM,\n  TOGGLE_ITEM_VISIBILITY,\n} from './actionTypes';\nimport { berlin, berlinAlexanderplatz } from './exampleCoordinates';\n\nconst initialState: State = {\n  items: [\n    {\n      id: uuidv4(),\n      label: 'Berlin',\n      type: ItemType.POLYGON,\n      isVisible: true,\n      color: 'teal',\n      geoJson: berlin.geoJson,\n    },\n    {\n      id: uuidv4(),\n      label: 'Alexanderplatz',\n      type: ItemType.POINT,\n      isVisible: true,\n      color: 'teal',\n      geoJson: berlinAlexanderplatz.geoJson,\n    },\n  ],\n};\n\nconst reducer = (state: State = initialState, action: Action) => {\n  switch (action.type) {\n    case ADD_ITEM: {\n      const { item } = action.payload;\n      return { items: [...state.items, { ...item, id: uuidv4() }] };\n    }\n    case MODIFY_ITEM: {\n      const { id, item } = action.payload;\n      return {\n        items: state.items.map((element) =>\n          element.id === id ? item : element\n        ),\n      };\n    }\n    case DELETE_ITEM: {\n      const { id } = action.payload;\n      return { items: state.items.filter((element) => element.id !== id) };\n    }\n    case TOGGLE_ITEM_VISIBILITY: {\n      const { id } = action.payload;\n      return {\n        items: state.items.map((element) =>\n          element.id === id\n            ? { ...element, isVisible: !element.isVisible }\n            : element\n        ),\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","export const berlin = {\n  wkt: 'POLYGON((13.482250000000136 52.675022000000155,13.481911000000139 52.66759899999997,13.494079000000113 52.667418999999995,13.493919 52.663711000000006,13.487489999999998 52.65638999999999,13.51148000000012 52.64862099999999,13.517399000000124 52.64482800000013,13.523491 52.64474200000009,13.529389 52.640949000000006,13.529229999999998 52.63724100000013,13.522801000000001 52.62992000000014,13.510299 52.622691,13.510139999999998 52.61899199999999,13.50372 52.61167799999998,13.503379999999998 52.604260000000124,13.51486 52.58927200000011,13.52719 52.59278899999998,13.545239 52.588820999999996,13.557220000000145 52.584929999999986,13.57492 52.57353899999998,13.574580000000138 52.56613200000001,13.586719 52.565959000000134,13.59244 52.55844900000011,13.591929 52.54734100000013,13.616010000000001 52.54327000000001,13.621900000000151 52.53947100000002,13.627619999999999 52.53197,13.627449 52.52827099999999,13.633497999999998 52.5281710000001,13.645799000000121 52.53169,13.651690000000142 52.52790199999998,13.663811 52.52771000000013,13.663631000000123 52.52400900000015,13.645099000000132 52.5168680000001,13.632289999999998 52.502239000000145,13.631767999999997 52.49113000000003,13.637831 52.491039,13.625191000000143 52.480111000000136,13.618960000000001 52.47649999999999,13.618619999999998 52.469089000000025,13.630729 52.46891099999999,13.6309 52.472610000000145,13.636960000000101 52.472519000000005,13.649419999999997 52.47973900000011,13.661349000000143 52.475848999999954,13.667400000000002 52.475762,13.667228999999999 52.472049,13.67328 52.47196300000002,13.673458000000151 52.475662,13.691078000000001 52.46427100000011,13.70318 52.46408099999999,13.702829000000124 52.45667,13.714740000000122 52.45278100000013,13.7151 52.46019100000001,13.703360000000147 52.467780000000005,13.7094 52.46768900000012,13.72132 52.463798999999966,13.732699999999998 52.448791,13.76291 52.448319000000026,13.762730000000001 52.44461100000001,13.768409 52.43710999999999,13.762379 52.43719899999999,13.762550000000147 52.440909000000005,13.750470000000002 52.44110100000003,13.749759000000154 52.426282000000015,13.743719000000114 52.426368999999994,13.7375 52.42277200000001,13.73714 52.41535999999999,13.748870000000002 52.407762000000105,13.742648000000143 52.40415200000001,13.742470000000138 52.400441000000114,13.724349000000002 52.40073100000012,13.699479 52.386292,13.69931 52.38259099999999,13.70535 52.38249999999999,13.70517 52.378792000000146,13.711219000000002 52.37868900000015,13.705011 52.37509299999999,13.698608 52.367772000000116,13.692739999999999 52.37157100000002,13.680308999999998 52.36435999999998,13.674258000000123 52.36444900000015,13.673919000000124 52.357039999999984,13.661138999999999 52.34241900000012,13.660959 52.33872200000013,13.648880000000132 52.338909000000115,13.643180000000145 52.346410000000105,13.643688 52.357519999999994,13.656130000000132 52.36473200000012,13.656299000000104 52.368440000000106,13.650259 52.36853099999999,13.650610000000002 52.37594300000012,13.644559000000001 52.37602900000013,13.638678999999998 52.37982900000014,13.614148 52.37280000000001,13.614489999999998 52.380200000000144,13.608599000000002 52.38399900000002,13.602559 52.384078999999986,13.603069000000119 52.39519899999996,13.572458 52.38825899999998,13.54218 52.388722,13.542688 52.39983000000001,13.536458999999999 52.39622000000003,13.530570000000127 52.40000800000013,13.524510000000001 52.40011300000015,13.512208999999999 52.39658,13.49404 52.396862999999996,13.48782 52.39324099999999,13.488148999999998 52.40065100000001,13.476849 52.419349000000125,13.464719 52.41952899999998,13.458479 52.41592100000014,13.440129 52.41249099999999,13.427829000000001 52.40896299999997,13.427669 52.405249999999995,13.438819 52.3828620000001,13.432759 52.382948999999996,13.432428000000002 52.375541999999996,13.42637 52.37562100000014,13.39604 52.37607299999999,13.39652 52.387181,13.378319 52.38745,13.378481 52.39115100000001,13.36059 52.39881800000012,13.348770000000115 52.406399000000135,13.348921000000002 52.410112,13.317929 52.395730000000015,13.306410000000142 52.41072,13.30657 52.414421000000004,13.28165 52.39995099999999,13.275580000000103 52.40005100000013,13.269659000000104 52.40383900000003,13.257509000000002 52.40401000000014,13.25781000000012 52.41141999999999,13.252048000000116 52.41891100000001,13.227739000000156 52.419262,13.21527 52.41202799999999,13.203120000000126 52.41220100000001,13.166050000000153 52.39789999999999,13.165899 52.394199000000015,13.178049000000156 52.39402100000001,13.17789 52.39031900000015,13.165749000000119 52.3905,13.153739999999999 52.394372000000004,13.141289 52.38713100000001,13.147659 52.394452,13.1355 52.39461800000001,13.117559 52.402277999999995,13.11161900000013 52.406082,13.09946 52.40625100000011,13.099608000000002 52.40995000000001,13.093819000000108 52.417439,13.112209999999997 52.42089200000001,13.118439 52.424510999999995,13.118589 52.428199000000006,13.131049 52.435451000000114,13.12526 52.442952000000105,13.119321 52.446739000000036,13.120061 52.46526,13.126290000000001 52.468879000000015,13.126438 52.472579999999994,13.132681000000002 52.476200000000006,13.138759 52.47612000000001,13.163998000000001 52.498001999999985,13.176479000000002 52.505239999999986,13.17054 52.509028,13.152430000000152 52.512989000000005,13.15258 52.516699999999986,13.14025 52.51316,13.128069999999997 52.51333999999997,13.122270000000128 52.520831999999984,13.135199 52.53919300000001,13.13579 52.554021000000006,13.14174000000014 52.55022099999999,13.153920000000001 52.55004099999999,13.154369 52.56116100000017,13.160609000000001 52.564779999999985,13.16091 52.57219000000015,13.155119000000001 52.579688000000004,13.148870000000102 52.57606900000016,13.136681 52.576239999999956,13.136991000000137 52.58364900000001,13.143081000000002 52.583561,13.155420000000106 52.587100000000135,13.16181 52.59442100000001,13.173999 52.59424999999996,13.180101000000148 52.59416300000001,13.192139000000001 52.59027900000012,13.198078 52.586492000000135,13.204168000000152 52.586398000000145,13.216209 52.58251899999999,13.216359 52.58623200000011,13.222449000000152 52.586141,13.228699 52.589760000000126,13.222609 52.58985100000001,13.216669 52.59363900000014,13.210879999999998 52.60113999999999,13.211028 52.60483900000003,13.21711800000014 52.604759,13.230238999999997 52.626812,13.242269000000135 52.62292800000003,13.248509 52.62655000000001,13.272738 52.62248999999997,13.273060000000157 52.629902000000016,13.267120000000002 52.633702,13.267268 52.63740100000001,13.285561000000001 52.63714300000001,13.286339999999997 52.65565900000013,13.31072 52.65531200000001,13.304468 52.651691,13.310248 52.644191999999975,13.309929 52.636780999999985,13.31586 52.632981,13.31555 52.625572000000005,13.33366 52.621601999999996,13.370198999999998 52.621059,13.382688000000002 52.62829300000001,13.382859 52.63199900000001,13.388949 52.63191900000001,13.3952010000001 52.635519999999985,13.401610000000119 52.64284100000003,13.401768999999998 52.64654900000002,13.413619000000002 52.63896199999999,13.419879 52.64256999999998,13.419708 52.638859,13.431719 52.634979999999985,13.4378 52.63489100000001,13.438140000000148 52.642301000000145,13.450641000000132 52.649539000000004,13.456730999999998 52.649440999999996,13.456560000000138 52.64572900000002,13.46265 52.64564200000001,13.468899000000002 52.649260999999996,13.474989000000106 52.64917,13.481237999999998 52.652778000000126,13.45723000000015 52.66055,13.46365 52.66786999999999,13.46974 52.66778099999999,13.482250000000136 52.675022000000155))',\n  geoJson: {\n    type: 'Polygon',\n    coordinates: [\n      [\n        [13.482250000000136, 52.675022000000155],\n        [13.481911000000139, 52.66759899999997],\n        [13.494079000000113, 52.667418999999995],\n        [13.493919, 52.663711000000006],\n        [13.487489999999998, 52.65638999999999],\n        [13.51148000000012, 52.64862099999999],\n        [13.517399000000124, 52.64482800000013],\n        [13.523491, 52.64474200000009],\n        [13.529389, 52.640949000000006],\n        [13.529229999999998, 52.63724100000013],\n        [13.522801000000001, 52.62992000000014],\n        [13.510299, 52.622691],\n        [13.510139999999998, 52.61899199999999],\n        [13.50372, 52.61167799999998],\n        [13.503379999999998, 52.604260000000124],\n        [13.51486, 52.58927200000011],\n        [13.52719, 52.59278899999998],\n        [13.545239, 52.588820999999996],\n        [13.557220000000145, 52.584929999999986],\n        [13.57492, 52.57353899999998],\n        [13.574580000000138, 52.56613200000001],\n        [13.586719, 52.565959000000134],\n        [13.59244, 52.55844900000011],\n        [13.591929, 52.54734100000013],\n        [13.616010000000001, 52.54327000000001],\n        [13.621900000000151, 52.53947100000002],\n        [13.627619999999999, 52.53197],\n        [13.627449, 52.52827099999999],\n        [13.633497999999998, 52.5281710000001],\n        [13.645799000000121, 52.53169],\n        [13.651690000000142, 52.52790199999998],\n        [13.663811, 52.52771000000013],\n        [13.663631000000123, 52.52400900000015],\n        [13.645099000000132, 52.5168680000001],\n        [13.632289999999998, 52.502239000000145],\n        [13.631767999999997, 52.49113000000003],\n        [13.637831, 52.491039],\n        [13.625191000000143, 52.480111000000136],\n        [13.618960000000001, 52.47649999999999],\n        [13.618619999999998, 52.469089000000025],\n        [13.630729, 52.46891099999999],\n        [13.6309, 52.472610000000145],\n        [13.636960000000101, 52.472519000000005],\n        [13.649419999999997, 52.47973900000011],\n        [13.661349000000143, 52.475848999999954],\n        [13.667400000000002, 52.475762],\n        [13.667228999999999, 52.472049],\n        [13.67328, 52.47196300000002],\n        [13.673458000000151, 52.475662],\n        [13.691078000000001, 52.46427100000011],\n        [13.70318, 52.46408099999999],\n        [13.702829000000124, 52.45667],\n        [13.714740000000122, 52.45278100000013],\n        [13.7151, 52.46019100000001],\n        [13.703360000000147, 52.467780000000005],\n        [13.7094, 52.46768900000012],\n        [13.72132, 52.463798999999966],\n        [13.732699999999998, 52.448791],\n        [13.76291, 52.448319000000026],\n        [13.762730000000001, 52.44461100000001],\n        [13.768409, 52.43710999999999],\n        [13.762379, 52.43719899999999],\n        [13.762550000000147, 52.440909000000005],\n        [13.750470000000002, 52.44110100000003],\n        [13.749759000000154, 52.426282000000015],\n        [13.743719000000114, 52.426368999999994],\n        [13.7375, 52.42277200000001],\n        [13.73714, 52.41535999999999],\n        [13.748870000000002, 52.407762000000105],\n        [13.742648000000143, 52.40415200000001],\n        [13.742470000000138, 52.400441000000114],\n        [13.724349000000002, 52.40073100000012],\n        [13.699479, 52.386292],\n        [13.69931, 52.38259099999999],\n        [13.70535, 52.38249999999999],\n        [13.70517, 52.378792000000146],\n        [13.711219000000002, 52.37868900000015],\n        [13.705011, 52.37509299999999],\n        [13.698608, 52.367772000000116],\n        [13.692739999999999, 52.37157100000002],\n        [13.680308999999998, 52.36435999999998],\n        [13.674258000000123, 52.36444900000015],\n        [13.673919000000124, 52.357039999999984],\n        [13.661138999999999, 52.34241900000012],\n        [13.660959, 52.33872200000013],\n        [13.648880000000132, 52.338909000000115],\n        [13.643180000000145, 52.346410000000105],\n        [13.643688, 52.357519999999994],\n        [13.656130000000132, 52.36473200000012],\n        [13.656299000000104, 52.368440000000106],\n        [13.650259, 52.36853099999999],\n        [13.650610000000002, 52.37594300000012],\n        [13.644559000000001, 52.37602900000013],\n        [13.638678999999998, 52.37982900000014],\n        [13.614148, 52.37280000000001],\n        [13.614489999999998, 52.380200000000144],\n        [13.608599000000002, 52.38399900000002],\n        [13.602559, 52.384078999999986],\n        [13.603069000000119, 52.39519899999996],\n        [13.572458, 52.38825899999998],\n        [13.54218, 52.388722],\n        [13.542688, 52.39983000000001],\n        [13.536458999999999, 52.39622000000003],\n        [13.530570000000127, 52.40000800000013],\n        [13.524510000000001, 52.40011300000015],\n        [13.512208999999999, 52.39658],\n        [13.49404, 52.396862999999996],\n        [13.48782, 52.39324099999999],\n        [13.488148999999998, 52.40065100000001],\n        [13.476849, 52.419349000000125],\n        [13.464719, 52.41952899999998],\n        [13.458479, 52.41592100000014],\n        [13.440129, 52.41249099999999],\n        [13.427829000000001, 52.40896299999997],\n        [13.427669, 52.405249999999995],\n        [13.438819, 52.3828620000001],\n        [13.432759, 52.382948999999996],\n        [13.432428000000002, 52.375541999999996],\n        [13.42637, 52.37562100000014],\n        [13.39604, 52.37607299999999],\n        [13.39652, 52.387181],\n        [13.378319, 52.38745],\n        [13.378481, 52.39115100000001],\n        [13.36059, 52.39881800000012],\n        [13.348770000000115, 52.406399000000135],\n        [13.348921000000002, 52.410112],\n        [13.317929, 52.395730000000015],\n        [13.306410000000142, 52.41072],\n        [13.30657, 52.414421000000004],\n        [13.28165, 52.39995099999999],\n        [13.275580000000103, 52.40005100000013],\n        [13.269659000000104, 52.40383900000003],\n        [13.257509000000002, 52.40401000000014],\n        [13.25781000000012, 52.41141999999999],\n        [13.252048000000116, 52.41891100000001],\n        [13.227739000000156, 52.419262],\n        [13.21527, 52.41202799999999],\n        [13.203120000000126, 52.41220100000001],\n        [13.166050000000153, 52.39789999999999],\n        [13.165899, 52.394199000000015],\n        [13.178049000000156, 52.39402100000001],\n        [13.17789, 52.39031900000015],\n        [13.165749000000119, 52.3905],\n        [13.153739999999999, 52.394372000000004],\n        [13.141289, 52.38713100000001],\n        [13.147659, 52.394452],\n        [13.1355, 52.39461800000001],\n        [13.117559, 52.402277999999995],\n        [13.11161900000013, 52.406082],\n        [13.09946, 52.40625100000011],\n        [13.099608000000002, 52.40995000000001],\n        [13.093819000000108, 52.417439],\n        [13.112209999999997, 52.42089200000001],\n        [13.118439, 52.424510999999995],\n        [13.118589, 52.428199000000006],\n        [13.131049, 52.435451000000114],\n        [13.12526, 52.442952000000105],\n        [13.119321, 52.446739000000036],\n        [13.120061, 52.46526],\n        [13.126290000000001, 52.468879000000015],\n        [13.126438, 52.472579999999994],\n        [13.132681000000002, 52.476200000000006],\n        [13.138759, 52.47612000000001],\n        [13.163998000000001, 52.498001999999985],\n        [13.176479000000002, 52.505239999999986],\n        [13.17054, 52.509028],\n        [13.152430000000152, 52.512989000000005],\n        [13.15258, 52.516699999999986],\n        [13.14025, 52.51316],\n        [13.128069999999997, 52.51333999999997],\n        [13.122270000000128, 52.520831999999984],\n        [13.135199, 52.53919300000001],\n        [13.13579, 52.554021000000006],\n        [13.14174000000014, 52.55022099999999],\n        [13.153920000000001, 52.55004099999999],\n        [13.154369, 52.56116100000017],\n        [13.160609000000001, 52.564779999999985],\n        [13.16091, 52.57219000000015],\n        [13.155119000000001, 52.579688000000004],\n        [13.148870000000102, 52.57606900000016],\n        [13.136681, 52.576239999999956],\n        [13.136991000000137, 52.58364900000001],\n        [13.143081000000002, 52.583561],\n        [13.155420000000106, 52.587100000000135],\n        [13.16181, 52.59442100000001],\n        [13.173999, 52.59424999999996],\n        [13.180101000000148, 52.59416300000001],\n        [13.192139000000001, 52.59027900000012],\n        [13.198078, 52.586492000000135],\n        [13.204168000000152, 52.586398000000145],\n        [13.216209, 52.58251899999999],\n        [13.216359, 52.58623200000011],\n        [13.222449000000152, 52.586141],\n        [13.228699, 52.589760000000126],\n        [13.222609, 52.58985100000001],\n        [13.216669, 52.59363900000014],\n        [13.210879999999998, 52.60113999999999],\n        [13.211028, 52.60483900000003],\n        [13.21711800000014, 52.604759],\n        [13.230238999999997, 52.626812],\n        [13.242269000000135, 52.62292800000003],\n        [13.248509, 52.62655000000001],\n        [13.272738, 52.62248999999997],\n        [13.273060000000157, 52.629902000000016],\n        [13.267120000000002, 52.633702],\n        [13.267268, 52.63740100000001],\n        [13.285561000000001, 52.63714300000001],\n        [13.286339999999997, 52.65565900000013],\n        [13.31072, 52.65531200000001],\n        [13.304468, 52.651691],\n        [13.310248, 52.644191999999975],\n        [13.309929, 52.636780999999985],\n        [13.31586, 52.632981],\n        [13.31555, 52.625572000000005],\n        [13.33366, 52.621601999999996],\n        [13.370198999999998, 52.621059],\n        [13.382688000000002, 52.62829300000001],\n        [13.382859, 52.63199900000001],\n        [13.388949, 52.63191900000001],\n        [13.3952010000001, 52.635519999999985],\n        [13.401610000000119, 52.64284100000003],\n        [13.401768999999998, 52.64654900000002],\n        [13.413619000000002, 52.63896199999999],\n        [13.419879, 52.64256999999998],\n        [13.419708, 52.638859],\n        [13.431719, 52.634979999999985],\n        [13.4378, 52.63489100000001],\n        [13.438140000000148, 52.642301000000145],\n        [13.450641000000132, 52.649539000000004],\n        [13.456730999999998, 52.649440999999996],\n        [13.456560000000138, 52.64572900000002],\n        [13.46265, 52.64564200000001],\n        [13.468899000000002, 52.649260999999996],\n        [13.474989000000106, 52.64917],\n        [13.481237999999998, 52.652778000000126],\n        [13.45723000000015, 52.66055],\n        [13.46365, 52.66786999999999],\n        [13.46974, 52.66778099999999],\n        [13.482250000000136, 52.675022000000155],\n      ],\n    ],\n    bbox: [\n      13.093819000000108, 52.33872200000013, 13.768409, 52.675022000000155,\n    ],\n  },\n};\n\nexport const berlinAlexanderplatz = {\n  wkt: 'POINT(13.413582850598319 52.52178385231913)',\n  geoJson: {\n    type: 'Point',\n    coordinates: [13.413582850598319, 52.52178385231913],\n  },\n};\n","import { createStore } from 'redux';\nimport reducer from './reducer';\n\nexport default createStore(reducer);\n","import { Header } from './Header';\n\nexport default Header;\n","import React from 'react';\nimport styles from './header.module.css';\n\nexport const Header: React.FC = () => {\n  const { href } = window.location;\n\n  return (\n    <div className={styles.logoWrapper}>\n      <a href={href} className={styles.logo}>\n        <i className=\"fas fa-map-marked fa-2x\"></i>\n        <span>WKT Map</span>\n      </a>\n    </div>\n  );\n};\n","import { TileLayerProps } from 'react-leaflet';\n\ninterface ProvidersProps {\n  [key: string]: TileLayerProps;\n}\n\nconst providers: ProvidersProps = {\n  OpenStreetMap: {\n    url: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n    attribution:\n      '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n    maxZoom: 19,\n  },\n  Stadia: {\n    url: 'https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png',\n    attribution:\n      '&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors',\n    maxZoom: 20,\n  },\n  Stamen: {\n    url: 'https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.png',\n    attribution:\n      'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n  },\n};\n\nexport default providers;\n","import React, { useEffect } from 'react';\nimport {\n  LatLng,\n  LatLngBoundsExpression,\n  LatLngExpression,\n  Map,\n  latLngBounds,\n  LatLngBounds,\n} from 'leaflet';\nimport { GeoJSON, Popup, useMap } from 'react-leaflet';\nimport { ItemType, MapItem } from '../../types/Item';\n\ninterface Props {\n  items: MapItem[];\n}\n\nconst getCoordinates = (item: MapItem): LatLngExpression[] => {\n  const coordinates = item.geoJson ? item.geoJson.coordinates : [];\n\n  switch (item.type) {\n    case ItemType.POINT:\n      return [new LatLng(coordinates[1], coordinates[0])];\n    case ItemType.LINESTRING:\n    case ItemType.MULTIPOINT:\n      return coordinates.map(\n        (coordinate: number[]) => new LatLng(coordinate[1], coordinate[0])\n      );\n    case ItemType.POLYGON:\n      return coordinates\n        .flat()\n        .map(\n          (coordinate: number[]) => new LatLng(coordinate[1], coordinate[0])\n        );\n    default:\n      return [];\n  }\n};\n\nexport const MapItems: React.FC<Props> = ({ items }) => {\n  const map: Map = useMap();\n\n  useEffect(() => {\n    const bounds: LatLngBoundsExpression = [];\n    items\n      .filter((it) => it.geoJson)\n      .filter((it) => it.isVisible)\n      .forEach((it) => {\n        const coordinates: LatLngExpression[] = getCoordinates(it);\n        const tmpBounds: LatLngBounds = latLngBounds(coordinates);\n        bounds.push(tmpBounds as any);\n      });\n\n    if (bounds.length > 0) {\n      map.fitBounds(bounds);\n    }\n  }, [items, map]);\n\n  return (\n    <>\n      {items\n        .filter((item) => item.isVisible)\n        .map((item) => (\n          <GeoJSON key={item.id} data={item.geoJson}>\n            <Popup>\n              <strong>{item.label}</strong>\n            </Popup>\n          </GeoJSON>\n        ))}\n    </>\n  );\n};\n","import { Map } from './Map';\n\nexport default Map;\n","import React from 'react';\nimport {\n  MapContainer,\n  TileLayer,\n  LayersControl,\n  ScaleControl,\n} from 'react-leaflet';\nimport { useSelector } from 'react-redux';\nimport { MapItem } from '../../types/Item';\nimport { State } from '../../types/Redux';\nimport providers from './providers';\nimport styles from './map.module.css';\nimport { MapItems } from './MapItems';\n\nexport const Map: React.FC = () => {\n  const items: MapItem[] = useSelector((state: State) => state.items);\n\n  return (\n    <MapContainer\n      center={[51.505, 10.09]}\n      zoom={4}\n      minZoom={2}\n      scrollWheelZoom={true}\n      className={styles.mapContainer}\n    >\n      <ScaleControl position=\"bottomleft\" />\n      <LayersControl position=\"topleft\">\n        <LayersControl.BaseLayer checked name=\"OpenStreetMap\">\n          <TileLayer {...providers.OpenStreetMap} />\n        </LayersControl.BaseLayer>\n        <LayersControl.BaseLayer name=\"Stadia Map\">\n          <TileLayer {...providers.Stadia} />\n        </LayersControl.BaseLayer>\n        <LayersControl.BaseLayer name=\"Stamen Watercolor\">\n          <TileLayer {...providers.Stamen} />\n        </LayersControl.BaseLayer>\n      </LayersControl>\n\n      <MapItems items={items} />\n    </MapContainer>\n  );\n};\n","import { AddButtton } from './AddButtton';\n\nexport default AddButtton;\n","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport styles from './addButton.module.css';\n\ntype Props = {\n  onClick: () => void;\n};\n\nexport const AddButtton: React.FC<Props> = ({ onClick }: Props) => {\n  return (\n    <Button\n      variant=\"primary\"\n      size=\"lg\"\n      onClick={onClick}\n      className={styles.addButton}\n    >\n      <i className=\"fas fa-plus\"></i>\n    </Button>\n  );\n};\n","import { Item } from './Item';\n\nexport default Item;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ItemType, MapItem } from '../../../types/Item';\nimport styles from './item.module.css';\nimport {\n  DELETE_ITEM,\n  TOGGLE_ITEM_VISIBILITY,\n} from '../../../redux/actionTypes';\n\ntype Props = {\n  item: MapItem;\n  handleEdit: (item: MapItem) => void;\n};\n\nexport const Item: React.FC<Props> = ({ item, handleEdit }: Props) => {\n  const dispatch = useDispatch();\n  const [showControls, setShowControls] = useState(false);\n  const { id, label, type, isVisible }: MapItem = item;\n  const faIconClass =\n    type === ItemType.POINT ? 'fa-map-marker' : 'fa-draw-polygon';\n\n  const handleToggleVisibility = () => {\n    dispatch({ type: TOGGLE_ITEM_VISIBILITY, payload: { id } });\n  };\n\n  const handleDelete = () => {\n    dispatch({ type: DELETE_ITEM, payload: { id } });\n  };\n\n  return (\n    <div\n      className={`${styles.container} ${\n        !isVisible ? styles.containerInvisible : ''\n      }`}\n      onMouseEnter={() => setShowControls(true)}\n      onMouseLeave={() => setShowControls(false)}\n    >\n      <div className={styles.icon}>\n        <i className={`fas ${faIconClass}`}></i>\n      </div>\n      <div className={styles.label}>\n        <strong>{label}</strong>\n      </div>\n      {showControls && (\n        <div className={styles.controlPanel}>\n          <i\n            className={`${\n              isVisible ? styles.visible : styles.invisible\n            } p-2 fas fa-eye${isVisible ? '' : '-slash'}`}\n            onClick={handleToggleVisibility}\n          ></i>\n          <i\n            className={`${styles.edit} p-2 fas fa-pen`}\n            onClick={() => handleEdit(item)}\n          ></i>\n          <i\n            className={`${styles.delete} p-2 fas fa-trash`}\n            onClick={handleDelete}\n          ></i>\n        </div>\n      )}\n    </div>\n  );\n};\n","import { GeoJSON } from '../types/Geo';\nconst Terraformer = require('@terraformer/wkt');\n\nexport const wktToGeoJson = (wkt: string): GeoJSON | undefined => {\n  if (wkt === '') return undefined;\n  return Terraformer.wktToGeoJSON(wkt);\n};\n\nexport const geoJsonToWkt = (geoJson?: GeoJSON): string | undefined => {\n  if (geoJson === undefined || geoJson === null) return undefined;\n  return Terraformer.geojsonToWKT(geoJson);\n};\n","import { EditModal } from './EditModal';\n\nexport default EditModal;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { ItemType, MapItem } from '../../../types/Item';\nimport { wktToGeoJson, geoJsonToWkt } from '../../../utils/wktParser';\nimport { ADD_ITEM, MODIFY_ITEM } from '../../../redux/actionTypes';\n\ninterface Props {\n  show: boolean;\n  item: MapItem | null;\n  handleClose: () => void;\n}\n\nexport const EditModal: React.FC<Props> = ({\n  show,\n  item,\n  handleClose,\n}: Props) => {\n  const dispatch = useDispatch();\n  const [label, setLabel] = useState('');\n  const [wkt, setWkt] = useState<string | undefined>(undefined);\n  const [isValid, setValid] = useState<boolean>(true);\n  const shapeInput: React.Ref<any> = useRef();\n  const title = item === null ? 'Add Coordinates' : 'Edit Coordinates';\n\n  useEffect(() => {\n    setLabel(item?.label || 'New Shape');\n    setWkt(geoJsonToWkt(item?.geoJson));\n\n    if (shapeInput.current) {\n      shapeInput.current.focus();\n    }\n  }, [item, show]);\n\n  const validateWktShape = (wkt: string) => {\n    let isValid = false;\n    try {\n      isValid = wktToGeoJson(wkt) !== undefined;\n    } catch (error) {\n      isValid = false;\n    }\n\n    setValid(isValid);\n  };\n\n  const resetStates = () => {\n    setLabel('');\n    setWkt('');\n  };\n\n  const handleSave = (e: any) => {\n    e.preventDefault();\n\n    if (isValid) {\n      const geoJson = wktToGeoJson(wkt as string);\n\n      if (item) {\n        dispatch({ type: MODIFY_ITEM, payload: { id: item.id, item } });\n      } else {\n        const newItem = {\n          label,\n          geoJson,\n          isVisible: true,\n          type: geoJson?.type as ItemType,\n          color: '',\n        };\n\n        dispatch({\n          type: ADD_ITEM,\n          payload: { item: newItem },\n        });\n      }\n\n      resetStates();\n      handleClose();\n    }\n  };\n\n  return (\n    <Modal size=\"lg\" show={show} onHide={handleClose}>\n      <Form onSubmit={handleSave}>\n        <Modal.Header closeButton>\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group as={Row} controlId=\"formBasicLabel\">\n            <Form.Label column sm={2}>\n              Label\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Shape Label\"\n                value={label}\n                onChange={(event) => setLabel(event.target.value)}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group\n            as={Row}\n            controlId=\"formBasicCoordinates\"\n            className=\"mt-3\"\n          >\n            <Form.Label column sm={2}>\n              Geometry\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                ref={shapeInput}\n                as=\"textarea\"\n                rows={6}\n                placeholder=\"WKT Coordinates\"\n                isInvalid={!isValid}\n                value={wkt}\n                onChange={(event) => setWkt(event.target.value)}\n                onBlur={(event) => validateWktShape(event.target.value)}\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please provide valid WKT data.\n              </Form.Control.Feedback>\n            </Col>\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button type=\"submit\" variant=\"primary\" disabled={wkt === undefined}>\n            <i className=\"fas fa-save\"></i>\n            <span className=\"mx-2\">Save</span>\n          </Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  );\n};\n","import { Panel } from './Panel';\n\nexport default Panel;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { MapItem } from '../../types/Item';\nimport { State } from '../../types/Redux';\nimport AddButtton from './buttons';\nimport Item from './item';\nimport EditModal from './edit';\nimport styles from './panel.module.css';\n\nexport const Panel: React.FC = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [itemToEdit, setItemToEdit] = useState<MapItem | null>(null);\n  const items: MapItem[] = useSelector((state: State) => state.items);\n\n  const handleButtonClick = () => {\n    setShowModal(true);\n  };\n\n  const handleItemEdit = (item: MapItem) => {\n    setItemToEdit(item);\n    setShowModal(true);\n  };\n\n  const handleClose = () => {\n    setShowModal(false);\n    setItemToEdit(null);\n  };\n\n  return (\n    <div className={styles.container}>\n      <AddButtton onClick={handleButtonClick} />\n      {items.map((item: MapItem) => (\n        <Item key={item.id} item={item} handleEdit={handleItemEdit} />\n      ))}\n      <EditModal show={showModal} item={itemToEdit} handleClose={handleClose} />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport Header from './components/header';\nimport Map from './components/map';\nimport Panel from './components/panel';\n\nconst App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <Header />\n      <Panel />\n      <Map />\n    </Provider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}